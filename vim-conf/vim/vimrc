" Enable syntax highlighting.
syntax on
"
" ignorecase
set ignorecase

" Indent based on the filetype. Uses scripts in <install_path>/indent directory
filetype plugin indent on

" Show existing tab with 4 spaces width
set tabstop=4

" Shift with 2 spaces except for in python.
set shiftwidth=2
autocmd BufNewFile,BufRead *.py set shiftwidth=4

" On pressing tab, insert 4 spaces
set expandtab

" Used to left align public/private keywords in C++ headers.
set cinoptions+=g0

" Setting nu and rnu turns on a hybrid line numbering system.
set number
set relativenumber

" Set nu and rnu in Explore.
let g:netrw_bufsettings = "noma nomod nu nobl nowrap ro rnu"

" Highlight what you are searching.
set hlsearch

" Incremental search. Search as you type. Not after enter.
set incsearch

" Backspace was misbehaving. This seems to fix it.
set backspace=indent,eol,start

" Choose to hide a buffer instead of closing it on :edit.
set hidden

" Autosign our `TODO's`
inoreabbrev TODO: TODO (nphair):
inoreabbrev NOTE: NOTE (nphair):

" Map escape to jk.
inoremap jk <Esc>`^

" Allow for actual tabbing with shift tab.
" inoremap <S-Tab> <C-V><Tab>
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>

" Map capital versions to eol (no \n) included.
nnoremap C c$
nnoremap D d$
nnoremap Y y$

" Autocomplete comments
set formatoptions+=r

" Change the default map leader, '\', to ' '
let mapleader = " "

" Run the selected code through the interpreter
xnoremap <leader>j :w !julia6<cr>
xnoremap <leader>p :w !python<cr>

" Split to the right and below and hop over to the newly split window.
set splitbelow
set splitright

" Convenient splitting key mappings.
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Folding stuff
" set foldmethod=indent
set nofoldenable

" Bash-like autocompletion.
set wildmode=longest,list,full

" Store .viminfo in our history directory.
set viminfo+=n~/.history/viminfo

" Shut up the vim beeping.
set visualbell

" Highlight the current line.
set cursorline

" Sign our todos and notes.
ab TODO: TODO: (nphair)
ab NOTE: NOTE: (nphair)
"=============================================================================
"                     Using vim-plug to manage our plugins                    
"=============================================================================
" Grab vim-plug if its not already there.
" Note, check the readme if we're sitting behind a proxy for what to do.
" Note, this complains alot... just persist and everything gets set up.
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'gabrielelana/vim-markdown'
Plug 'vim-airline/vim-airline'
Plug 'vim-scripts/headerguard'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'bling/vim-bufferline'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'danilo-augusto/vim-afterglow'
call plug#end()
"=============================================================================
"=============================================================================
" We'll have to set out colorscheme after we load it's plugin.
colorscheme afterglow
set background=dark

" --------------------Plugin Configurations-----------------------------------
" Headerguard configurations. Add header guards to .h and .hpp files.
autocmd BufNewFile,BufRead *.h,*.hpp HeaderguardAdd
autocmd BufNewFile,BufRead */config	setfiletype sshconfig
autocmd BufNewFile,BufRead *.py set shiftwidth=4
